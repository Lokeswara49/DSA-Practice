class Solution {
    public int search(int[] nums, int target) {
        int low=0;
        int high=nums.length-1;
        while(low<=high){
            int mid=((high-low)/2)+low;
            if(nums[mid]==target){
                return mid;
            }
            if(nums[low]<=nums[mid]){
                if(target>=nums[low] && target<nums[mid]){
                    return binarySearch(nums,low,mid-1,target);
                }
                else{
                    low=mid+1;
                }
            }
            else{
                if(target<=nums[high] && target>nums[mid]){
                    return binarySearch(nums,1+mid,high,target);
                }
                else{
                    high=mid-1;
                }
            }
            
        }
        return -1;
    }
    public static int binarySearch(int[] nums,int l,int h,int target){
        while(l<=h){
            int mid=(l)+((h-l)/2);
            if(target==nums[mid]){
                return mid;
            }
            if(nums[mid]>target){
                h=mid-1;
            }
            else{
                l=mid+1;
            }
        }
        return -1;
    }
}